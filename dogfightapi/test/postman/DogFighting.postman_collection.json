{
	"variables": [],
	"info": {
		"name": "Dog Fighting",
		"_postman_id": "da59e549-82e3-b859-21df-c516f51206ae",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "API",
			"description": "",
			"item": [
				{
					"name": "Add Lola",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Success is 1\"] = jsonData.success === 1;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Lola\",\r\n   \"gender\" : \"female\",\r\n   \"weight\" : 65,\r\n   \"attacks\" : [\r\n      { \"message\" : \"{0} bites {1}'s ears\", \"value\" : -20 },\r\n      { \"message\" : \"{0} bites {1}'s nose\", \"value\" : -10 },\r\n      { \"message\" : \"{0} bites {1}'s leg\", \"value\" : -30 }\r\n   ],\r\n   \"distractions\" : [\r\n      {\"message\" : \"{0} is distracted by a squirrel\", \"value\" : -20 },\r\n      {\"message\" : \"{0} barks at a car\", \"value\" : -10 },\r\n      {\"message\" : \"{0} lays down to take a nap\", \"value\" : -30 }\r\n   ],\r\n   \"actions\" : [\r\n      {\"message\" : \"{0} growls at {1}\", \"value\" : 15 },\r\n      {\"message\" : \"{0} snarls at {1}\", \"value\" : 10 },\r\n      {\"message\" : \"{0} raises hackles\", \"value\" : 5 }\r\n   ]\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add Duke",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Success is 1\"] = jsonData.success === 1;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Duke\",\r\n   \"gender\" : \"male\",\r\n   \"weight\" : 60,\r\n   \"attacks\" : [\r\n      { \"message\" : \"{0} bites {1}'s ears\", \"value\" : -20 },\r\n      { \"message\" : \"{0} bites {1}'s nose\", \"value\" : -10 },\r\n      { \"message\" : \"{0} bites {1}'s leg\", \"value\" : -30 }\r\n   ],\r\n   \"distractions\" : [\r\n      {\"message\" : \"{0} is distracted by a moth\", \"value\" : -20 },\r\n      {\"message\" : \"{0} is distracted by Trent\", \"value\" : -10 }\r\n   ],\r\n   \"actions\" : [\r\n      {\"message\" : \"{0} growls at {1}\", \"value\" : 15 }\r\n   ]\r\n}\r\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get All Dogs",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Lola is in list\"] = jsonData.indexOf(\"Lola\") >= 0;",
									"tests[\"Duke is in list\"] = jsonData.indexOf(\"Duke\") >= 0;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dogs",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Lola",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is returned\"] = jsonData.name === \"Lola\"",
									"tests[\"gender is returned\"] = jsonData.gender === \"female\";",
									"tests[\"weight is returned\"] = jsonData.weight === 65;",
									"tests[\"Lola has at least 1 attack\"] = jsonData.attacks.length > 0;",
									"tests[\"Lola has at least 1 distraction\"] = jsonData.distractions.length > 0;",
									"tests[\"Lola has at least 1 action\"] = jsonData.actions.length > 0;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Duke",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is returned\"] = jsonData.name === \"Duke\"",
									"tests[\"gender is returned\"] = jsonData.gender === \"male\";",
									"tests[\"weight is returned\"] = jsonData.weight === 60;",
									"tests[\"Duke has at least 1 attack\"] = jsonData.attacks.length > 0;",
									"tests[\"Duke has at least 1 distraction\"] = jsonData.distractions.length > 0;",
									"tests[\"Duke has at least 1 action\"] = jsonData.actions.length > 0;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Duke",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Spot",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"message is 'Spot not found'\"] = jsonData.message === \"Spot not found\""
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Spot",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Lola's Attacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Lola has more than 1 attack\"] = jsonData.length > 0;",
									"",
									"var schema = {",
									" \"type\" : \"array\",",
									" \"items\" : {",
									"    \"type\" : \"object\",",
									"    \"properties\" : {",
									"        \"message\" : {",
									"            \"type\" : \"string\"",
									"        },",
									"        \"value\" : {",
									"            \"type\" : \"number\"",
									"        }",
									"    },",
									"    \"required\" : [\"message\", \"value\"]",
									" }",
									"};",
									"",
									"tests[\"Valid response\"] = tv4.validate(jsonData, schema);",
									"console.log(\"Validation failed: \", tv4.error);"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola/attacks",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Duke's Attacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Duke has more than 1 attack\"] = jsonData.length > 0;",
									"",
									"var schema = {",
									" \"type\" : \"array\",",
									" \"items\" : {",
									"    \"type\" : \"object\",",
									"    \"properties\" : {",
									"        \"message\" : {",
									"            \"type\" : \"string\"",
									"        },",
									"        \"value\" : {",
									"            \"type\" : \"number\"",
									"        }",
									"    },",
									"    \"required\" : [\"message\", \"value\"]",
									" }",
									"};",
									"",
									"tests[\"Valid response\"] = tv4.validate(jsonData, schema);",
									"console.log(\"Validation failed: \", tv4.error);"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Duke/attacks",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Lola Attack",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Success is 1\"] = jsonData.success === 1;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola/attacks",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"message\": \"{0} bites {1}'s leg\"}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Duke's Distractions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Duke has more than 1 distraction\"] = jsonData.length > 0;",
									"",
									"var schema = {",
									" \"type\" : \"array\",",
									" \"items\" : {",
									"    \"type\" : \"object\",",
									"    \"properties\" : {",
									"        \"message\" : {",
									"            \"type\" : \"string\"",
									"        },",
									"        \"value\" : {",
									"            \"type\" : \"number\"",
									"        }",
									"    },",
									"    \"required\" : [\"message\", \"value\"]",
									" }",
									"};",
									"",
									"tests[\"Valid response\"] = tv4.validate(jsonData, schema);",
									"console.log(\"Validation failed: \", tv4.error);"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Duke/distractions",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Duke Distraction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Success is 1\"] = jsonData.success === 1;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Duke/distractions",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"message\": \"{0} is distracted by a moth\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Lola's Actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Lola has more than 1 action\"] = jsonData.length > 0;",
									"",
									"var schema = {",
									" \"type\" : \"array\",",
									" \"items\" : {",
									"    \"type\" : \"object\",",
									"    \"properties\" : {",
									"        \"message\" : {",
									"            \"type\" : \"string\"",
									"        },",
									"        \"value\" : {",
									"            \"type\" : \"number\"",
									"        }",
									"    },",
									"    \"required\" : [\"message\", \"value\"]",
									" }",
									"};",
									"",
									"tests[\"Valid response\"] = tv4.validate(jsonData, schema);",
									"console.log(\"Validation failed: \", tv4.error);"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola/actions",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Lola Action",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Success is 1\"] = jsonData.success === 1;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola/actions",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"message\": \"{0} snarls at {1}\"\n}\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Invalid Add Attack Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Response body has message\"] = jsonData.hasOwnProperty(\"message\");",
									"tests[\"message contains 'Request validation failed'\"] = jsonData.message.has(\"Request validation failed\");"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola/attacks",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add Attack for Lola",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"success is 1\"] = jsonData.success === 1;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola/attacks",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"message\": \"{0} bites {1}'s paw.\",\n\t\"value\": -10\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add Attack for Duke",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"success is 1\"] = jsonData.success === 1;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Duke/attacks",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"message\": \"{0} bites {1}'s paw.\",\n\t\"value\": -10\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Start Invalid Fight",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"message contains 'Must have only 2 dogs in a fight'\"] = jsonData.message.has(\"Must have only 2 dogs in a fight\");"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/fight",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"Lola\", \"Duke\", \"Bailey\"]"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Lola",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Lola",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove Duke",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/dog/Duke",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Listen",
			"description": "",
			"item": [
				{
					"name": "Listen (Add Dog)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = (responseCode.code === 200);\r",
									"\r",
									"if (responseCode.code === 200) {\r",
									"    // Set an ID for this execution\r",
									"    postman.setEnvironmentVariable(\"run_id\", _.random(0,100000));\r",
									"    // As defined in the workflow, set the next request to be executed to Create Day Log\r",
									"    postman.setNextRequest(\"Listen (Add Attack)\");\r",
									"}\r",
									"else {\r",
									"    // Stop execution\r",
									"    postman.setNextRequest(null);\r",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"attackIteration\", \"0\");",
									"postman.setEnvironmentVariable(\"distractionIteration\", \"0\");",
									"postman.setEnvironmentVariable(\"actionIteration\", \"0\");"
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/listen",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "b23DC6jji0bCyrQRBVaxlrsZ",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_id",
									"value": "T0001",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_domain",
									"value": "example",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_id",
									"value": "C2147483705",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_name",
									"value": "test",
									"type": "text",
									"enabled": true
								},
								{
									"key": "timestamp",
									"value": "1355517523.000005",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_id",
									"value": "U2147483697",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_name",
									"value": "Steve",
									"type": "text",
									"enabled": true
								},
								{
									"key": "text",
									"value": "dogfight add dog {{name}} {{gender}} {{weight}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "trigger_word",
									"value": "googlebot",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Listen (Add Attack)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = (responseCode.code === 200);\r",
									"\r",
									"if (responseCode.code === 200) {\r",
									"    // As defined in the workflow, set the next request to be executed to Create Day Log\r",
									"    var attackIteration = _.parseInt(postman.getEnvironmentVariable(\"attackIteration\"));\r",
									"    if(attackIteration < _.parseInt(data[\"attacks\"])) { \r",
									"        postman.setNextRequest(\"Listen (Add Attack)\");\r",
									"    } else {\r",
									"        postman.setNextRequest(\"Listen (Add Distraction)\");\r",
									"    }\r",
									"}\r",
									"else {\r",
									"    // Stop execution\r",
									"    postman.setNextRequest(null);\r",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var attackIteration = environment.attackIteration ? _.parseInt(environment.attackIteration) + 1 : 1;\r",
									"console.log(attackIteration);\r",
									"console.log(data['attack_'+attackIteration].message);\r",
									"console.log(data['attack_'+attackIteration].value);\r",
									"postman.setEnvironmentVariable(\"attack\", data['attack_'+attackIteration].message);\r",
									"postman.setEnvironmentVariable(\"value\", _.parseInt(data['attack_'+attackIteration].value));\r",
									"// This value will be use in the URL\r",
									"postman.setEnvironmentVariable(\"attackIteration\", attackIteration);\r",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/listen",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "b23DC6jji0bCyrQRBVaxlrsZ",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_id",
									"value": "T0001",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_domain",
									"value": "example",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_id",
									"value": "C2147483705",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_name",
									"value": "test",
									"type": "text",
									"enabled": true
								},
								{
									"key": "timestamp",
									"value": "1355517523.000005",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_id",
									"value": "U2147483697",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_name",
									"value": "Steve",
									"type": "text",
									"enabled": true
								},
								{
									"key": "text",
									"value": "dogfight add attack {{name}} \"{{attack}}\" {{value}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "trigger_word",
									"value": "dogfight",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Listen (Add Distraction)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = (responseCode.code === 200);\r",
									"\r",
									"if (responseCode.code === 200) {\r",
									"    // As defined in the workflow, set the next request to be executed to Create Day Log\r",
									"    var distractionIteration = _.parseInt(postman.getEnvironmentVariable(\"distractionIteration\"));\r",
									"    if(distractionIteration < _.parseInt(data[\"distractions\"])) { \r",
									"        postman.setNextRequest(\"Listen (Add Distraction)\");\r",
									"    } else {\r",
									"        postman.setNextRequest(\"Listen (Add Action)\");\r",
									"    }\r",
									"}\r",
									"else {\r",
									"    // Stop execution\r",
									"    postman.setNextRequest(null);\r",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var distractionIteration = environment.distractionIteration ? _.parseInt(environment.distractionIteration) + 1 : 1;\r",
									"console.log(data['distraction_'+distractionIteration].message);\r",
									"console.log(data['distraction_'+distractionIteration].value);\r",
									"postman.setEnvironmentVariable(\"distraction\", data['distraction_'+distractionIteration].message);\r",
									"postman.setEnvironmentVariable(\"value\", _.parseInt(data['distraction_'+distractionIteration].value));\r",
									"// This value will be use in the URL\r",
									"postman.setEnvironmentVariable(\"distractionIteration\", distractionIteration);\r",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/listen",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "b23DC6jji0bCyrQRBVaxlrsZ",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_id",
									"value": "T0001",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_domain",
									"value": "example",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_id",
									"value": "C2147483705",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_name",
									"value": "test",
									"type": "text",
									"enabled": true
								},
								{
									"key": "timestamp",
									"value": "1355517523.000005",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_id",
									"value": "U2147483697",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_name",
									"value": "Steve",
									"type": "text",
									"enabled": true
								},
								{
									"key": "text",
									"value": "dogfight add distraction {{name}} \"{{distraction}}\" {{value}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "trigger_word",
									"value": "dogfight",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Listen (Add Action)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = (responseCode.code === 200);\r",
									"\r",
									"if (responseCode.code === 200) {\r",
									"    // As defined in the workflow, set the next request to be executed to Create Day Log\r",
									"    var actionIteration = _.parseInt(postman.getEnvironmentVariable(\"actionIteration\"));\r",
									"    if(actionIteration < _.parseInt(data[\"actions\"])) { \r",
									"        postman.setNextRequest(\"Listen (Add Action)\");\r",
									"    } else {\r",
									"        postman.setNextRequest(\"Listen (Get Dogs)\");\r",
									"    }\r",
									"}\r",
									"else {\r",
									"    // Stop execution\r",
									"    postman.setNextRequest(null);\r",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var actionIteration = environment.actionIteration ? _.parseInt(environment.actionIteration) + 1 : 1;\r",
									"console.log(data['action_'+actionIteration].message);\r",
									"console.log(data['action_'+actionIteration].value);\r",
									"postman.setEnvironmentVariable(\"action\", data['action_'+actionIteration].message);\r",
									"postman.setEnvironmentVariable(\"value\", _.parseInt(data['action_'+actionIteration].value));\r",
									"// This value will be use in the URL\r",
									"postman.setEnvironmentVariable(\"actionIteration\", actionIteration);\r",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{url}}/listen",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "b23DC6jji0bCyrQRBVaxlrsZ",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_id",
									"value": "T0001",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_domain",
									"value": "example",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_id",
									"value": "C2147483705",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_name",
									"value": "test",
									"type": "text",
									"enabled": true
								},
								{
									"key": "timestamp",
									"value": "1355517523.000005",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_id",
									"value": "U2147483697",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_name",
									"value": "Steve",
									"type": "text",
									"enabled": true
								},
								{
									"key": "text",
									"value": "dogfight add distraction {{name}} \"{{action}}\" {{value}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "trigger_word",
									"value": "dogfight",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Listen (Get Dogs)",
					"request": {
						"url": "http://{{url}}/listen",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "b23DC6jji0bCyrQRBVaxlrsZ",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_id",
									"value": "T0001",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_domain",
									"value": "example",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_id",
									"value": "C2147483705",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_name",
									"value": "test",
									"type": "text",
									"enabled": true
								},
								{
									"key": "timestamp",
									"value": "1355517523.000005",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_id",
									"value": "U2147483697",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_name",
									"value": "Steve",
									"type": "text",
									"enabled": true
								},
								{
									"key": "text",
									"value": "dogfight getdogs",
									"type": "text",
									"enabled": true
								},
								{
									"key": "trigger_word",
									"value": "googlebot",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Listen (Get Dog)",
					"request": {
						"url": "http://{{url}}/listen",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "b23DC6jji0bCyrQRBVaxlrsZ",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_id",
									"value": "T0001",
									"type": "text",
									"enabled": true
								},
								{
									"key": "team_domain",
									"value": "example",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_id",
									"value": "C2147483705",
									"type": "text",
									"enabled": true
								},
								{
									"key": "channel_name",
									"value": "test",
									"type": "text",
									"enabled": true
								},
								{
									"key": "timestamp",
									"value": "1355517523.000005",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_id",
									"value": "U2147483697",
									"type": "text",
									"enabled": true
								},
								{
									"key": "user_name",
									"value": "Steve",
									"type": "text",
									"enabled": true
								},
								{
									"key": "text",
									"value": "dogfight getdog Lola",
									"type": "text",
									"enabled": true
								},
								{
									"key": "trigger_word",
									"value": "googlebot",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Start Fight",
			"request": {
				"url": "http://{{url}}/fight",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\"Kit\", \"Bailey\"]"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Remove Bailey",
			"request": {
				"url": "http://{{url}}/dog/Bailey",
				"method": "DELETE",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get Bailey",
			"request": {
				"url": "http://{{url}}/dog/Bailey",
				"method": "DELETE",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		}
	]
}